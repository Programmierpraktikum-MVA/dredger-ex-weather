package subscribers

import (
	"encoding/json"
	"log"
	"{{ .ModuleName }}/internal/config/structs"

	"github.com/gorilla/websocket"
	"github.com/nats-io/nats.go"
)

func Subscribe{{ .MessageName }}(nc *nats.Conn, ws *websocket.Conn) *nats.Subscription { //sind MessageName immer Capital am anfang?

	// Subscribe to "{{ .ChannelName }}"
	sub, err := nc.Subscribe("{{ .ChannelName }}", func(msg *nats.Msg) {
		env := structs.Envelope{
			Type: "{{ .MessageName }}",
			Data: msg.Data,
		}
		out, err := json.Marshal(env)
		if err != nil {
			log.Println("Error marshaling {{ .MessageName }} envelope:", err)
			return
		}
		if writeErr := ws.WriteMessage(websocket.TextMessage, out); writeErr != nil {
			log.Println("Error writing {{ .MessageName }} to WebSocket:", writeErr)
		}
	})
	if err != nil {
		log.Println("NATS subscribe to {{ .ChannelName }} failed:", err)
		return nil
	}

	return sub
}
